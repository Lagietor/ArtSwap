version: '3.7'

networks:
  some_network:
    name: some_network

services:
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: '${APP_NAME}-server'
    ports:
      - '1000:80'
    working_dir: /var/www/html
    environment:
      - 'DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:3306/${MYSQL_DATABASE}?serverVersion=mariadb-10.9.2'
      - 'MYSQL_HOST=${MYSQL_HOST}'
      - 'MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}'
      - 'MYSQL_USER=${MYSQL_USER}'
      - 'MYSQL_PASSWORD=${MYSQL_PASSWORD}'
      - 'MYSQL_DATABASE=${MYSQL_DATABASE}'
    volumes:
      - "${APP_PATH}:/var/www/html"
      - ./server/site.conf:/etc/apache2/sites-enabled/site.conf
      - ./server/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
      - ./server/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    networks:
      - some_network

  db_server:
    image: mariadb:10.9.2
    container_name: "${APP_NAME}-db"
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - '1020:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
    volumes:
      - db-data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 5
    networks:
      - some_network

  db_admin:
    image: phpmyadmin:5.2-apache
    container_name: '${APP_NAME}-db-admin'
    ports:
      - '1010:80'
    environment:
      PMA_HOST: 'db_server'
    volumes:
      - db-admin-data:/var/www/html
    networks:
      - some_network

  react_app:
    image: node:18
    container_name: '${APP_NAME}-react'
    volumes:
      - "${FRONT_PATH}:/app"
    ports:
      - '5173:5173'
    working_dir: /app
    environment:
      - NODE_ENV=development
    command: bash -c 'npm install && npm run dev'
    networks:
      - some_network

volumes:
  db-data:
  db-admin-data:


